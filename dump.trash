

def get_point_grid(
    lon_min,
    lat_min,
    lon_max,
    lat_max,
    spacing_in_meters: int,
    polygon_to_intersect: Polygon,
) -> List[Polygon]:
    print("start")
    start = time.time()

    to_proxy_transformer = Transformer.from_crs("epsg:4326", "epsg:3857")
    to_original_transformer = Transformer.from_crs("epsg:3857", "epsg:4326")

    x_min, y_min = to_proxy_transformer.transform(lat_min, lon_min)
    x_max, y_max = to_proxy_transformer.transform(lat_max, lon_max)

    number_of_points = (int((x_max - x_min) / spacing_in_meters) + 1) * (
        int((y_max - y_min) / spacing_in_meters) + 1
    )

    gridpoints = numpy.empty(number_of_points, dtype=Point)
    i = 0

    x = x_min
    while x < x_max:
        y = y_min
        while y < y_max:
            lat, lon = to_original_transformer.transform(x, y)
            p = Point(lon, lat)
            if polygon_to_intersect.intersects(p):
                gridpoints[i] = p
                i = i + 1

            y += spacing_in_meters
        x += spacing_in_meters

    end = time.time()
    print("time 1", end - start)

    return gridpoints[:i]


def get_point_grid2(
    lon_min,
    lat_min,
    lon_max,
    lat_max,
    spacing_in_meters: int,
    polygon_to_intersect: Polygon,
) -> List[Polygon]:
    print("start")
    start = time.time()

    to_proxy_transformer = Transformer.from_crs("epsg:4326", "epsg:3857")

    x_min, y_min = to_proxy_transformer.transform(lat_min, lon_min)
    x_max, y_max = to_proxy_transformer.transform(lat_max, lon_max)

    x_points = numpy.arange(x_min, x_max, spacing_in_meters)
    y_points = numpy.arange(y_min, y_max, spacing_in_meters)

    x_coordinates = numpy.repeat(x_points, y_points.shape[0])
    y_coordinates = numpy.tile(y_points, x_points.shape[0])

    df1 = pandas.DataFrame({"X": x_coordinates, "Y": y_coordinates})
    df1["X, Y"] = list(zip(df1["X"], df1["Y"]))
    df1["X, Y"] = df1["X, Y"].apply(Point)
    gdf1 = gpd.GeoDataFrame(df1["X, Y"], geometry="X, Y", crs="epsg:3857")

    gdf1 = gdf1.to_crs("epsg:4326")

    mask = gdf1.within(polygon_to_intersect)

    gdf1 = gdf1.loc[mask]

    end = time.time()
    print("time 2", end - start)

    return gdf1["X, Y"]


def get_point_grid3(
    lon_min,
    lat_min,
    lon_max,
    lat_max,
    spacing_in_meters: int,
    polygon_to_intersect: Polygon,
) -> List[Polygon]:
    print("start")
    start = time.time()

    to_proxy_transformer = Transformer.from_crs("epsg:4326", "epsg:3857")
    to_original_transformer = Transformer.from_crs("epsg:3857", "epsg:4326")

    x_min, y_min = to_proxy_transformer.transform(lat_min, lon_min)
    x_max, y_max = to_proxy_transformer.transform(lat_max, lon_max)

    polygon_transformer = Transformer.from_crs("epsg:4326", "epsg:3857", always_xy=True)
    proxy_polygon_to_intersect = transform(
        polygon_transformer.transform,
        polygon_to_intersect,
    )

    number_of_points = (int((x_max - x_min) / spacing_in_meters) + 1) * (
        int((y_max - y_min) / spacing_in_meters) + 1
    )

    print("number_of_points:", number_of_points)

    gridpoints = numpy.empty(number_of_points, dtype=Point)
    i = 0

    x = x_min
    while x < x_max:
        y = y_min
        while y < y_max:
            p = Point(x, y)
            if proxy_polygon_to_intersect.intersects(p):
                lat, lon = to_original_transformer.transform(x, y)
                gridpoints[i] = Point(lon, lat)
                i = i + 1

            y += spacing_in_meters
        x += spacing_in_meters

    end = time.time()
    print("time 3", end - start)

    return gridpoints[:i]

